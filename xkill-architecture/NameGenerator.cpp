#include "NameGenerator.h"

#include <xkill-utilities\Math.h> //Math::randomInt

void NameGenerator::reset()
{
	addName("Sprak");

	addName("Algol");
	addName("Haskell");
	addName("Fortran");
	addName("Pascal");
	addName("Erlang");
	addName("Lisp");
	addName("Occam");
	addName("Brainfuck");
	addName("Formac");
	addName("Quiktran");
	addName("Cowsel");
	addName("Blarrhgh");
	addName("Xargs");
	addName("Echo");
	addName("Cksum");

	addName("Assembly");
	addName("C");
	addName("C++");
	addName("Simula");
	addName("Modula");
	addName("Java");
	addName("not a name");
	addName("semaphore");
	addName("loop");
	addName("break");
	addName("breakpoint");
	addName("if");
	addName("else if");
	addName("Operator");
	addName("NULL");
	addName("Pointer");
	addName("void pointer");
	addName("Overload");
	addName("Carmack");
	addName("Stefan Petersson");
	addName("while");
	addName("string");
	addName("get");
	addName("set");
	addName("semicolon");
	addName("bracket");
	addName("exit");
	addName("main");
	addName(".h");
	addName(".cpp");
	addName("dependency");
	addName("include");
	addName("hash");
	addName("bash");
	addName("crash");
	addName("git");
	addName("multi-core");
	addName("shell");
	addName("printf");
	addName("cout");
	addName("debug");
	addName("release");
	addName("data stream");
	addName("fps");
	addName("frustum");
	addName("culling");
	addName("segfault");
	addName("stack overflow");
	addName("buffer overflow");
	addName("cache");
	addName("bottleneck");
	addName("instance");
	addName("viewport");
	addName("render target");
	addName("static");
	addName("update");
	addName("remove");
	addName("delete");
	addName("new");
	addName("allocate");
	addName("deallocate");
	addName("performance");
	addName("std");
	addName("format");
	addName("DirectX");
	addName("breakpoint");
	addName("clear");
	addName("box");
	addName("vertex");
	addName("triangle");
	addName("primitive");
	addName("true");
	addName("false");
	addName("class");
	addName("private");
	addName("public");
	addName("protected");
	addName("function");
	addName("entity");
	addName("master");
	addName("slave");
	addName("IDE");
	addName("operating system");
	addName("syscall");
	addName("PCB");
	addName("process");
	addName("thread");
	addName("aligned");
	addName("file");
	addName("handle");
	addName("stack");
	addName("mutable");
	addName("immutable");
	addName("tech");
	addName("pixel");
	addName("voxel");
	addName("polishing");
	addName("chunk");
	addName("data structure");
	addName("spatial");
	addName("event");
	addName("procedure");
	addName("mode");
	addName("Visual Studio");
	addName("G332");
	addName("G403");
	addName("Stort spelprojekt");
	addName("hack");
	addName("exception");
	addName("array");
	addName("disable");
	addName("activate");
	addName("enable");
	addName("heap");
	addName("bubble sort");
	addName("stringstream");
	addName("fstream");
	addName("goto");
	addName("jump");
	addName("branch");
	addName("generate");
	addName("caves and buildings");
	addName("engine");
	addName("on the fly");
	addName("compile");
	addName("recompile");
	addName("optimize");
	addName("billboard");
	addName("Solmyr");
	addName("Lord Haart");
	addName("include guard");
	addName("directive");
	addName("concatenate");
	addName("derived");
	addName("polymorphism");
	addName("dynamic binding");
	addName("static binding");
	addName("static binding");
	addName("swap chain");
	addName("device");
	addName("esp");
	addName("stack pointer");
	addName("assembler");
	addName("linker");
	addName("target");
	addName("status");
	addName("virtual memory");
	addName("garbage collection");
	addName("debugger");
	addName("worker thread");
	addName("thread pool");
	addName("system");
	addName("override");
	addName("output");
	addName("input");
	addName("device driver");
	addName("driver");
	addName("memory leak");
	addName("error");
	addName("fail");
	addName("success");
	addName("reference");
	addName("by-reference");
	addName("by-name");
	addName("denominator");
	addName("numerator");
	addName("fraction");
	addName("split");
	addName("inverse");
	addName("local");
	addName("global");
	addName("scope");
	addName("run-time");
	addName("compile-time");
	addName("stack trace");
	addName("call stack");
	addName("error list");
	addName("line number");
	addName("utility");
	addName("project");
	addName("Win32");
	addName("x86");
	addName("x64");
	addName("jumper");
	addName("kernel");
	addName("build");
	addName("comment");
	addName("code");
	addName("slash");
	addName("backslash");
	addName("symbol");
	addName("solution");
	addName("problem");
	addName("hotkey");
	addName("call hierarchy");
	addName("hotswap");
	addName("dll");
	addName("object");
	addName("class");
	addName("recursion");
	addName("bit");
	addName("custom name");
	addName("newline");
	addName("out of memory");
	addName("restart");
	addName("define");
	addName("macro");
	addName("forward declaration");
	addName("backward compatibility");
	addName("non-inclusive");
	addName("imperative");
	addName("agile");
	addName("message");
	addName("event");
	addName("launch");
	addName("word");
	addName("integer");
	addName("boolean");
	addName("nibble");
	addName("double word");
	addName("32-bit");
	addName("64-bit");
	addName("floating point");
	addName("increment");
	addName("decrement");
	addName("rebuild solution");
	addName("clean");
	addName("failure");
	addName("incomplete");
	addName("invalid");
	addName("unsupported");
	addName("infinite");
	addName("finite");
	addName("please update");
	addName("condition");
	addName("batch");
	addName("right of time");
	addName("skip tp finish");
	addName("apply purpose");
	addName("buffer");
	addName("component");
	addName("entity");
	addName("attribute");
	addName("overhead");
	addName("mathematics");
	addName("tradeoff");
	addName("callback");
	addName("source code");
	addName("open source");
	addName("deferred rendering");
	addName("abstract");
	addName("backbuffer");
	addName("double-buffering");
	addName("program");
	addName("hardcode");
	addName("hard-wire");
	addName("programmer");
	addName("pro gamer");
	addName("unfinished operation");
	addName("matrix");
	addName("algebra");
	addName("quaternion");
	addName("root node");
	addName("export");
	addName("import");
	addName("scene");
	addName("FBX");
	addName("OBJ");
	addName("texture");
	addName("clamp");
	addName("UV");
	addName("collision object");
	addName("step simulation");
	addName("interpolation");
	addName("extrapolation");
	addName("dangling pointer");
	addName("smart pointer");
	addName("unknown");
	addName("unset");
	addName("reset");
	addName("unrecoverable");
	addName("data failed to be");
	addName("system overload");
	addName("reborn as Maya");
	addName("invaluable token");
	addName("MyClass");
	addName("Hello World");
	addName("quick fix");
	addName("patch");
	addName("version control");
	addName("code evaluation");
	addName("your neighbour");
	addName("interpretor");
	addName("inter-predator");
	addName("failed to load file");
	addName("constant");
	addName("variable");
	addName("member of society");
	addName("edit");
	addName("almost valid");
	addName("Battle In Operating System (BIOS)");
	addName("repository");
	addName("tester");
	addName("invisble swan");
	addName("proprietary");
	addName("illegal operation");
	addName("try to score");
	addName("Visual Studio 2012");
	addName("Qt");
	addName("not tested");
	addName("as-is");
	addName("no guarantee");
	addName("self-inflicted compile error");
	addName("boost");
	addName("library");
	addName("helper function");
	addName("wrapper class");
	addName("not a number");
	addName("error code -1");
	addName("error code");
	addName("same as usual");
	addName("render");
	addName("skip action");
	addName("take branch");
	addName("escape");
	addName("unordered sequence");
	addName("briefer than life");
	addName("call on fail");
	addName("railway on ice");
	addName("injection");
	addName("call");
	addName("synchronous");
	addName("asynchronous");
		
	//C++ keywords
	addName("alignas");
	addName("alignof");
	addName("and");
	addName("and_eq");
	addName("asm");
	addName("auto");
	addName("bitand");
	addName("bitor");
	addName("bool");
	addName("break");
	addName("case");
	addName("catch");
	addName("char");
	addName("char16_t");
	addName("char32_t");
	addName("class");
	addName("compl");
	addName("const");
	addName("constexpr");
	addName("const_cast");
	addName("continue");
	addName("decltype");
	addName("default");
	addName("delete");
	addName("do");
	addName("double");
	addName("dynamic_cast");
	addName("else");
	addName("enum");
	addName("explicit");
	addName("export");
	addName("extern");
	addName("false");
	addName("float");
	addName("for");
	addName("friend");
	addName("goto");
	addName("if");
	addName("inline");
	addName("int");
	addName("long");
	addName("mutable");
	addName("namespace");
	addName("new");
	addName("noexcept");
	addName("not");
	addName("not_eq");
	addName("nullptr");
	addName("operator");
	addName("or");
	addName("or_eq");
	addName("private");
	addName("protected");
	addName("public");
	addName("register");
	addName("reinterpret_cast");
	addName("return");
	addName("short");
	addName("signed");
	addName("sizeof");
	addName("static");
	addName("static_assert");
	addName("static_cast");
	addName("struct");
	addName("switch");
	addName("template");
	addName("this");
	addName("thread_local");
	addName("throw");
	addName("true");
	addName("try");
	addName("typedef");
	addName("typeid");
	addName("typename");
	addName("union");
	addName("unsigned");
	addName("using");
	addName("virtual");
	addName("void");
	addName("volatile");
	addName("wchar_t");
	addName("while");
	addName("xor");
	addName("xor_eq");
}
void NameGenerator::addName(std::string name)
{
	names.push_back(name);
}
std::string NameGenerator::getName()
{
	// Reset names if all have been picked
	if(names.size() <= 0)
		reset();

	// Pick random name
	int numNames = names.size();
	int index = Math::randomInt(0, numNames-1);
	std::string name = names.at(index);

	// Remove name using Swap-Trick
	names.at(index) = names.back();
	names.pop_back();

	// Return name
	return name;
}